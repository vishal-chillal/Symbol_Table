     1                                  section .data
     2 00000000 4100000037000000        	msg1 dd 65,55
     3 00000008 4164646974696F6E20-     	msg db "Addition is %d",9,0
     4 00000011 69732025640900     
     5 00000018 646A646B6A66640A00      	Temp db "djdkjfd",10,0
     6 00000021 0C0000000C000000A1-     	NumA dd 12,12,929
     7 0000002A 030000             
     8 0000002D 68656C6C6F              	NumB db "hello"
     9 00000032 0C0000000B000000        	NumC dd 12,11
    10                                  section .bss
    11 00000000 <res 00000030>          	twelv resd 12
    12 00000030 <res 00000006>          	three resw 3
    13 00000036 <res 00000004>          	four resb 4
    14 0000003A <res 00000014>          	one resd 5
    15 0000004E <res 0000003C>          	two resd 15
    16                                  	
    17                                  section .text
    18                                  	global main
    19                                  	extern printf,scanf
    20                                  	
    21 00000000 89D8                    main:	mov eax,ebx	
    22                                  	
    23 00000002 01D1                    l9:	add ecx,edx
    24 00000004 89C0                    	mov eax,eax		;reg32,reg32
    25                                  	
    26                                  kk1:
    27 00000006 8A25[3A000000]          	mov ah,byte[one]	;reg8,mem8
    28 0000000C 8902                    	mov dword[edx],eax
    29 0000000E 00C0                    	add al,al 		;reg8,reg8
    30 00000010 6601C0                  	add ax,ax		;reg16,reg16
    31 00000013 01C0                    	add eax,eax		;reg32,reg32
    32                                  
    33 00000015 8005[3A000000]0A        	add byte[one],10	;mem8,imm8
    34 0000001C 668305[4E000000]17      	add word[two],23	;mem16,imm16
    35 00000024 8305[36000000]6F        p223:	add dword[four],111	;mem32,imm32
    36                                  
    37 0000002B B820000000              	mov eax,32
    38                                  	
    39 00000030 68[4E000000]            	push two
    40 00000035 68[36000000]            	push four
    41 0000003A 88C0                    	mov al,al 		;reg8,reg8
    42                                  	
    43 0000003C 2A05[3A000000]          	sub al,byte[one]	;reg8,mem8
    44                                  
    45 00000042 B8[54000000]            	mov eax,_abc
    46 00000047 B061                    	mov al,'a'
    47 00000049 B8084F0000              l1:     mov eax,20232
    48 0000004E 66B8E707                	mov ax,2023
    49 00000052 B014                    	mov al,20
    50 00000054 C3                      _abc: 	ret					
    51                                  	
